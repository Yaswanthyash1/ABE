From 2f2ba52be53262640bca2107c927001a94289890 Mon Sep 17 00:00:00 2001
From: Immortus1 <yashas80dj@gmail.com>
Date: Sun, 2 Mar 2025 22:43:15 +0530
Subject: [PATCH 4/6] TCP -CUBIC betaEcn for ABE added

---
 src/internet/model/tcp-cubic.cc | 21 ++++++++++++++++++---
 src/internet/model/tcp-cubic.h  |  1 +
 2 files changed, 19 insertions(+), 3 deletions(-)

diff --git a/src/internet/model/tcp-cubic.cc b/src/internet/model/tcp-cubic.cc
index 406fc14c5..fcb445509 100644
--- a/src/internet/model/tcp-cubic.cc
+++ b/src/internet/model/tcp-cubic.cc
@@ -44,6 +44,11 @@ TcpCubic::GetTypeId()
                           DoubleValue(0.7),
                           MakeDoubleAccessor(&TcpCubic::m_beta),
                           MakeDoubleChecker<double>(0.0))
+            .AddAttribute("BetaEcn",
+                          "Beta for multiplicative decrease for ABE",
+                          DoubleValue(0.85),//According to RFC 8511 (ABE) 
+                          MakeDoubleAccessor(&TcpCubic::m_betaEcn),
+                          MakeDoubleChecker<double>(0.0))              
             .AddAttribute("HyStart",
                           "Enable (true) or disable (false) hybrid slow start algorithm",
                           BooleanValue(true),
@@ -103,6 +108,7 @@ TcpCubic::GetTypeId()
                           DoubleValue(0.4),
                           MakeDoubleAccessor(&TcpCubic::m_c),
                           MakeDoubleChecker<double>(0.0));
+                          
     return tid;
 }
 
@@ -129,6 +135,7 @@ TcpCubic::TcpCubic(const TcpCubic& sock)
     : TcpCongestionOps(sock),
       m_fastConvergence(sock.m_fastConvergence),
       m_beta(sock.m_beta),
+      m_betaEcn(sock.m_betaEcn),
       m_hystart(sock.m_hystart),
       m_hystartDetect(sock.m_hystartDetect),
       m_hystartLowWindow(sock.m_hystartLowWindow),
@@ -466,10 +473,18 @@ TcpCubic::GetSsThresh(Ptr<const TcpSocketState> tcb, uint32_t bytesInFlight)
     }
 
     m_epochStart = Time::Min(); // end of epoch
-
+    
+    uint32_t ssThresh;
     /* Formula taken from the Linux kernel */
-    uint32_t ssThresh = std::max(static_cast<uint32_t>(segCwnd * m_beta), 2U) * tcb->m_segmentSize;
-
+    if(!tcb->m_enableAbe)
+    {
+        ssThresh = std::max(static_cast<uint32_t>(segCwnd * m_beta), 2U) * tcb->m_segmentSize;
+    }
+    else
+    {
+        ssThresh = std::max(static_cast<uint32_t>(segCwnd * m_betaEcn), 2U) * tcb->m_segmentSize;
+    }
+    
     NS_LOG_DEBUG("SsThresh = " << ssThresh);
 
     return ssThresh;
diff --git a/src/internet/model/tcp-cubic.h b/src/internet/model/tcp-cubic.h
index b34918cb9..f4b2f69dd 100644
--- a/src/internet/model/tcp-cubic.h
+++ b/src/internet/model/tcp-cubic.h
@@ -96,6 +96,7 @@ class TcpCubic : public TcpCongestionOps
     bool m_fastConvergence; //!< Enable or disable fast convergence algorithm
     bool m_tcpFriendliness; //!< Enable or disable TCP-friendliness heuristic
     double m_beta;          //!< Beta for cubic multiplicative increase
+    double m_betaEcn;       //!< Beta for cubic multiplicative decrease with ABE 
 
     bool m_hystart;                        //!< Enable or disable HyStart algorithm
     HybridSSDetectionMode m_hystartDetect; //!< Detect way for HyStart algorithm
-- 
2.34.1

